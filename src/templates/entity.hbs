import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, DeleteDateColumn, OneToMany, ManyToOne, ManyToMany, OneToOne } from 'typeorm';
{{#if fields}}
{{#each fields}}
{{#if (eq type "one-to-many")}}import { {{target}} } from './{{target}}.entity';
{{/if}}
{{#if (eq type "many-to-one")}}import { {{target}} } from './{{target}}.entity';
{{/if}}
{{#if (eq type "many-to-many")}}import { {{target}} } from './{{target}}.entity';
{{/if}}
{{#if (eq type "one-to-one")}}import { {{target}} } from './{{target}}.entity';
{{/if}}
{{/each}}
{{/if}}

{{{generateTsEnum fields}}}

@Entity()
export class {{name}} {
  {{#if (eq idType "uuid")}}
  @PrimaryGeneratedColumn('uuid')
  public id: string;
  {{else}}
  @PrimaryGeneratedColumn()
  public id: number;
  {{/if}}

  {{#each fields}}
  {{{mapColumnOptions this}}}
  {{#if (eq type "file")}}
  @Column({ type: 'json', nullable: true })
  public {{name}}: any;
  {{else}}
  public {{name}}: {{mapTsType type this}};
  {{/if}}
  {{/each}}

  @CreateDateColumn({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })
  public created_at: Date;

  @Column({ type: 'varchar', length: 255, nullable: true })
  public created_by: string;

  @Column({ type: 'uuid', nullable: true })
  public created_id: string;

  @UpdateDateColumn({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })
  public updated_at: Date;

  @Column({ type: 'varchar', length: 255, nullable: true })
  public updated_by: string;

  @Column({ type: 'uuid', nullable: true })
  public updated_id: string;

  @DeleteDateColumn({ type: 'timestamp', nullable: true })
  public deleted_at: Date;

  @Column({ type: 'varchar', length: 255, nullable: true })
  public deleted_by: string;

  @Column({ type: 'uuid', nullable: true })
  public deleted_id: string;
}